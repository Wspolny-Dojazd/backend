name: Build and Deploy to K3s

on:
  workflow_dispatch:

env:
  ConnectionStrings__AppDbConnectionString: Server=myServerAddress;Database=myDataBase;Uid=myUsername;Pwd=myPassword;
  DB_SERVER_VERSION: 8.0.43

jobs:
  build-and-push:
    name: Build and push ‚õè
    runs-on: 8.0-bookworm-slim-arm64v8

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # - uses: actions/setup-dotnet@v4
      #   with:
      #     dotnet-version: '8.0.x'

      - name: Install EF tooling
        run: dotnet tool install --global dotnet-ef

      - name: Restore dependencies
        run: dotnet restore Backend.sln --ucr

      - name: Build
        run: dotnet build --ucr -c Debug --no-restore

      - name: Create EF Migrations Bundle for DatabaseContext
        run: |
          cp ./Persistence/bin/Debug/net8.0/linux-*/* ./Persistence/bin/Debug/net8.0/
          dotnet ef migrations bundle --project Persistence/Persistence.csproj --context DatabaseContext -o DatabaseContextBundle --self-contained --no-build

      - name: Create EF Migrations Bundle for PTSDbContext
        run: |
          cp ./PublicTransportService/bin/Debug/net8.0/linux-*/* ./PublicTransportService/bin/Debug/net8.0/
          dotnet ef migrations bundle --project PublicTransportService/PublicTransportService.csproj --context PTSDbContext -o PTSDbContextBundle --self-contained --no-build

      - name: Publish
        run: dotnet publish --ucr --artifacts-path artifacts --nologo --self-contained

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Build Docker image
        run: |
          docker build --platform arm64 -t ${{ secrets.DOCKER_USERNAME }}/wspolny-dojazd:backend .

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/wspolny-dojazd:backend
  
  rollout:
    name: Rollout üöÄ
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Trigger rollout
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          port: ${{ secrets.PORT }}
          script: sudo kubectl rollout restart deployment/csharp-server-deployment
